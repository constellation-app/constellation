/*
 * Copyright 2010-2024 Australian Signals Directorate
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package au.gov.asd.tac.constellation.help.preferences;

/**
 * An options panel allowing customisation of help settings.
 *
 * @author Delphinus8821
 */
public class HelpOptionsPanel extends javax.swing.JPanel {

    public HelpOptionsPanel() {
        initComponents();
    }

    public boolean isOnlineHelpSelected() {
        return onlineHelpCheckBox.isSelected();
    }

    public void setOnlineHelpOption(final boolean setOnlineHelp) {
        this.onlineHelpCheckBox.setSelected(setOnlineHelp);
    }

    public int getOfflineHelpPort() {
        return (Integer) offlinePortSpinner.getModel().getValue();
    }

    public void setOfflineHelpPort(final int offineHelpPort) {
        offlinePortSpinner.getModel().setValue(offineHelpPort);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        onlineHelpPanel = new javax.swing.JPanel();
        onlineHelpCheckBox = new javax.swing.JCheckBox();
        offlinePortLbl = new javax.swing.JLabel();
        offlinePortSpinner = new javax.swing.JSpinner();

        onlineHelpPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(HelpOptionsPanel.class, "HelpOptionsPanel.onlineHelpPanel.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(onlineHelpCheckBox, org.openide.util.NbBundle.getMessage(HelpOptionsPanel.class, "HelpOptionsPanel.onlineHelpCheckBox.text")); // NOI18N
        onlineHelpCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onlineHelpCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(offlinePortLbl, org.openide.util.NbBundle.getMessage(HelpOptionsPanel.class, "HelpOptionsPanel.offlinePortLbl.text")); // NOI18N

        javax.swing.GroupLayout onlineHelpPanelLayout = new javax.swing.GroupLayout(onlineHelpPanel);
        onlineHelpPanel.setLayout(onlineHelpPanelLayout);
        onlineHelpPanelLayout.setHorizontalGroup(
            onlineHelpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(onlineHelpPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(onlineHelpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(onlineHelpCheckBox)
                    .addGroup(onlineHelpPanelLayout.createSequentialGroup()
                        .addComponent(offlinePortLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(offlinePortSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(384, Short.MAX_VALUE))
        );
        onlineHelpPanelLayout.setVerticalGroup(
            onlineHelpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(onlineHelpPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(onlineHelpCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(onlineHelpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(offlinePortSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(offlinePortLbl))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(onlineHelpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(onlineHelpPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void onlineHelpCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onlineHelpCheckBoxActionPerformed
        onlineHelpCheckBox.setSelected(onlineHelpCheckBox.isSelected());
    }//GEN-LAST:event_onlineHelpCheckBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel offlinePortLbl;
    private javax.swing.JSpinner offlinePortSpinner;
    private javax.swing.JCheckBox onlineHelpCheckBox;
    private javax.swing.JPanel onlineHelpPanel;
    // End of variables declaration//GEN-END:variables
}
