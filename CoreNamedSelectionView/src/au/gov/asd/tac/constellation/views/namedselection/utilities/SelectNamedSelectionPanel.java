/*
 * Copyright 2010-2024 Australian Signals Directorate
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package au.gov.asd.tac.constellation.views.namedselection.utilities;

import au.gov.asd.tac.constellation.views.namedselection.NamedSelection;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.event.ChangeEvent;
import org.apache.commons.lang3.StringUtils;

/**
 *
 * @author algol
 */
public class SelectNamedSelectionPanel extends javax.swing.JPanel {

    private final List<NamedSelection> namedSelections;

    public SelectNamedSelectionPanel(final List<NamedSelection> namedSelections, String labelText) {
        this(namedSelections, labelText, true); // Maintain original functionality
        this.jRadioButton2.setEnabled(false); // Should not use selected elements when calling this constructor
    }

    public SelectNamedSelectionPanel(final List<NamedSelection> namedSelections, String labelText, final boolean nsMode) {
        // Need to directly call this constructor if the currently selected elements can optionally be used in place of a named selection
        // Note: The calling plugin will need to process the selected elements itself 
        
        initComponents();

        this.buttonGroup1.add(jRadioButton1);
        this.buttonGroup1.add(jRadioButton2);
        this.jRadioButton1.addChangeListener((ChangeEvent e) -> nsList.setEnabled(jRadioButton1.isSelected()));
        this.jRadioButton1.setSelected(nsMode);
        this.jRadioButton2.setSelected(!nsMode);
        nsList.setEnabled(nsMode);
        this.label.setText(labelText);
        this.namedSelections = namedSelections;

        final DefaultListModel<String> listModel = new DefaultListModel<>();
        if (namedSelections != null) {
            for (final NamedSelection ns : namedSelections) {
                final String descr = ns.getDescription();
                final String s = StringUtils.isNotBlank(descr) ? String.format("%s: %s", ns.getName(), ns.getDescription()) : ns.getName();
                listModel.addElement(s);
            }
            nsList.setModel(listModel);
            nsList.setSelectedIndex(0);
        }

    }

    /**
     * @return the ID of the chosen Named Selection, if one was chosen.
     *         Otherwise, it will return: <b>-1</b> if the if the "Use Currently Selected" option is chosen
     *         OR it will return <b>-2</b> if no option was selected.
     */
    public long getNamedSelectionId() {
        if (jRadioButton2.isSelected()) {
            return -2;
        }
        final int ix = nsList.getSelectedIndex();
        return ix > -1 ? namedSelections.get(ix).getID() : -1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        nsList = new javax.swing.JList<>();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();

        label.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(label, org.openide.util.NbBundle.getMessage(SelectNamedSelectionPanel.class, "SelectNamedSelectionPanel.label.text")); // NOI18N

        jScrollPane1.setViewportView(nsList);

        jRadioButton1.setLabel(org.openide.util.NbBundle.getMessage(SelectNamedSelectionPanel.class, "SelectNamedSelectionPanel.jRadioButton1.label")); // NOI18N

        jRadioButton2.setLabel(org.openide.util.NbBundle.getMessage(SelectNamedSelectionPanel.class, "SelectNamedSelectionPanel.jRadioButton2.label")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jRadioButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label;
    private javax.swing.JList<String> nsList;
    // End of variables declaration//GEN-END:variables
}
