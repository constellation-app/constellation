/*
 * Copyright 2010-2019 Australian Signals Directorate
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package au.gov.asd.tac.constellation.preferences;

import java.awt.Color;
import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSlider;
import javax.swing.LayoutStyle;
import org.openide.awt.Mnemonics;
import org.openide.util.NbBundle;

/**
 * UI panel to define the session parameters
 *
 * @author aldebaran30701
 */
final class GraphOptionsPanel extends javax.swing.JPanel {

    private final GraphOptionsPanelController controller;

    public GraphOptionsPanel(final GraphOptionsPanelController controller) {
        this.controller = controller;
        initComponents();

        /**
         * REMOVE this section when implementing custom blaze colours Introduced
         * with fix for issue #158 FROM HERE
         */
        blazeColourPanel.setVisible(false);
        blazeColourPlaceholder.setVisible(false);
        blazeColourDescription.setVisible(false);
        /**
         * TO HERE
         */
    }

    public void setBlazeSize(final int value) {
        blazeSlider.setValue(value);
    }

    public void setBlazeOpacity(final int value) {
        blazeOpacitySlider.setValue(value);
    }

    public int getBlazeSize() {
        return blazeSlider.getValue();
    }

    public int getBlazeOpacity() {
        return blazeOpacitySlider.getValue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        blazeSizePanel = new JPanel();
        blazeSlider = new JSlider();
        blazeSizeDescription = new JLabel();
        blazeOpacitySlider = new JSlider();
        blazeOpacityDescription = new JLabel();
        blazeColourPanel = new JPanel();
        blazeColourDescription = new JLabel();
        blazeColourPlaceholder = new JLabel();
        warningLabel = new JLabel();

        blazeSizePanel.setBorder(BorderFactory.createTitledBorder(NbBundle.getMessage(GraphOptionsPanel.class, "GraphOptionsPanel.blazeSizePanel.border.title"))); // NOI18N

        Mnemonics.setLocalizedText(blazeSizeDescription, NbBundle.getMessage(GraphOptionsPanel.class, "GraphOptionsPanel.blazeSizeDescription.text")); // NOI18N

        Mnemonics.setLocalizedText(blazeOpacityDescription, NbBundle.getMessage(GraphOptionsPanel.class, "GraphOptionsPanel.blazeOpacityDescription.text")); // NOI18N

        GroupLayout blazeSizePanelLayout = new GroupLayout(blazeSizePanel);
        blazeSizePanel.setLayout(blazeSizePanelLayout);
        blazeSizePanelLayout.setHorizontalGroup(blazeSizePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(blazeSizePanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(blazeSizePanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(blazeOpacityDescription)
                    .addComponent(blazeSizeDescription, GroupLayout.Alignment.LEADING))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(blazeSizePanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                    .addComponent(blazeOpacitySlider, GroupLayout.PREFERRED_SIZE, 253, GroupLayout.PREFERRED_SIZE)
                    .addComponent(blazeSlider, GroupLayout.PREFERRED_SIZE, 253, GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );
        blazeSizePanelLayout.setVerticalGroup(blazeSizePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(blazeSizePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(blazeSizePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(blazeSizeDescription)
                    .addComponent(blazeSlider, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(blazeSizePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(blazeOpacitySlider, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(blazeOpacityDescription))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        blazeColourPanel.setBorder(BorderFactory.createTitledBorder(NbBundle.getMessage(GraphOptionsPanel.class, "GraphOptionsPanel.blazeColourPanel.border.title"))); // NOI18N

        Mnemonics.setLocalizedText(blazeColourDescription, NbBundle.getMessage(GraphOptionsPanel.class, "GraphOptionsPanel.blazeColourDescription.text")); // NOI18N

        Mnemonics.setLocalizedText(blazeColourPlaceholder, NbBundle.getMessage(GraphOptionsPanel.class, "GraphOptionsPanel.blazeColourPlaceholder.text")); // NOI18N

        GroupLayout blazeColourPanelLayout = new GroupLayout(blazeColourPanel);
        blazeColourPanel.setLayout(blazeColourPanelLayout);
        blazeColourPanelLayout.setHorizontalGroup(blazeColourPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(blazeColourPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(blazeColourDescription)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                .addComponent(blazeColourPlaceholder)
                .addGap(94, 94, 94))
        );
        blazeColourPanelLayout.setVerticalGroup(blazeColourPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(blazeColourPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(blazeColourPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(blazeColourDescription)
                    .addComponent(blazeColourPlaceholder))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        warningLabel.setFont(new Font("Tahoma", 1, 11)); // NOI18N
        warningLabel.setForeground(new Color(102, 102, 102));
        warningLabel.setIcon(new ImageIcon(getClass().getResource("/au/gov/asd/tac/constellation/preferences/resources/warning.png"))); // NOI18N
        Mnemonics.setLocalizedText(warningLabel, NbBundle.getMessage(GraphOptionsPanel.class, "GraphOptionsPanel.warningLabel.text")); // NOI18N

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(blazeSizePanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(blazeColourPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(warningLabel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(warningLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(blazeSizePanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(blazeColourPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        blazeSizePanel.getAccessibleContext().setAccessibleName(NbBundle.getMessage(GraphOptionsPanel.class, "GraphOptionsPanel.blazeSizePanel.AccessibleContext.accessibleName")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel blazeColourDescription;
    private JPanel blazeColourPanel;
    private JLabel blazeColourPlaceholder;
    private JLabel blazeOpacityDescription;
    private JSlider blazeOpacitySlider;
    private JLabel blazeSizeDescription;
    private JPanel blazeSizePanel;
    private JSlider blazeSlider;
    private JLabel warningLabel;
    // End of variables declaration//GEN-END:variables
}
