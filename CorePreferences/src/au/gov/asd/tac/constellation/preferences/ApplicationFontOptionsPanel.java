/*
 * Copyright 2010-2021 Australian Signals Directorate
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package au.gov.asd.tac.constellation.preferences;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.LayoutStyle;
import javax.swing.SpinnerNumberModel;
import org.openide.awt.Mnemonics;
import org.openide.util.NbBundle;

/**
 * UI panel for setting the application default font preferences
 *
 * @author Delphinus8821
 */
final class ApplicationFontOptionsPanel extends JPanel {

    private final ApplicationFontOptionsPanelController controller;
    private final String[] fonts = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();

    public ApplicationFontOptionsPanel(final ApplicationFontOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
    }

    public String getCurrentFont() {
        return fontCombo.getSelectedItem().toString();
    }

    public void setCurrentFont(final String currentFont) {
        fontCombo.setSelectedItem(currentFont);
    }

    public String getFontSize() {
        return fontSizeSpinner.getValue().toString();
    }

    public void setFontSize(final String fontSize) {
        fontSizeSpinner.setValue(Integer.parseInt(fontSize));
    }

    public String[] getFontList() {
        return fonts;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fontPanel = new JPanel();
        fontLbl = new JLabel();
        fontSizeLbl = new JLabel();
        fontCombo = new JComboBox<>();
        fontSizeSpinner = new JSpinner();
        resetBtn = new JButton();
        warningLabel = new JLabel();

        setPreferredSize(new Dimension(604, 529));

        fontPanel.setBorder(BorderFactory.createTitledBorder(NbBundle.getMessage(ApplicationFontOptionsPanel.class, "ApplicationFontOptionsPanel.fontPanel.border.title"))); // NOI18N

        Mnemonics.setLocalizedText(fontLbl, NbBundle.getMessage(ApplicationFontOptionsPanel.class, "ApplicationFontOptionsPanel.fontLbl.text")); // NOI18N

        Mnemonics.setLocalizedText(fontSizeLbl, NbBundle.getMessage(ApplicationFontOptionsPanel.class, "ApplicationFontOptionsPanel.fontSizeLbl.text")); // NOI18N

        fontCombo.setModel(new DefaultComboBoxModel(fonts));
        fontCombo.setSelectedItem(ApplicationFontPreferenceKeys.FONT_FAMILY_DEFAULT);

        fontSizeSpinner.setModel(new SpinnerNumberModel(12, 6, 45, 1));

        Mnemonics.setLocalizedText(resetBtn, NbBundle.getMessage(ApplicationFontOptionsPanel.class, "ApplicationFontOptionsPanel.resetBtn.text")); // NOI18N
        resetBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        GroupLayout fontPanelLayout = new GroupLayout(fontPanel);
        fontPanel.setLayout(fontPanelLayout);
        fontPanelLayout.setHorizontalGroup(fontPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(fontPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fontPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(fontLbl)
                    .addComponent(fontSizeLbl))
                .addGap(152, 152, 152)
                .addGroup(fontPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(fontCombo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(fontSizeSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(196, Short.MAX_VALUE))
            .addGroup(GroupLayout.Alignment.TRAILING, fontPanelLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resetBtn)
                .addGap(43, 43, 43))
        );
        fontPanelLayout.setVerticalGroup(fontPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(fontPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(fontPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(fontLbl)
                    .addComponent(fontCombo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(fontPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(fontSizeLbl)
                    .addComponent(fontSizeSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(resetBtn)
                .addContainerGap())
        );

        fontSizeLbl.getAccessibleContext().setAccessibleName(NbBundle.getMessage(ApplicationFontOptionsPanel.class, "ApplicationFontOptionsPanel.fontSizeLbl.AccessibleContext.accessibleName")); // NOI18N
        fontCombo.getAccessibleContext().setAccessibleName(NbBundle.getMessage(ApplicationFontOptionsPanel.class, "ApplicationFontOptionsPanel.fontCombo.AccessibleContext.accessibleName")); // NOI18N
        fontSizeSpinner.getAccessibleContext().setAccessibleName(NbBundle.getMessage(ApplicationFontOptionsPanel.class, "ApplicationFontOptionsPanel.fontSizeSpinner.AccessibleContext.accessibleName")); // NOI18N

        warningLabel.setFont(new Font("Tahoma", 1, 11)); // NOI18N
        warningLabel.setForeground(new Color(102, 102, 102));
        warningLabel.setIcon(new ImageIcon(getClass().getResource("/au/gov/asd/tac/constellation/preferences/resources/warning.png"))); // NOI18N
        Mnemonics.setLocalizedText(warningLabel, NbBundle.getMessage(ApplicationFontOptionsPanel.class, "ApplicationFontOptionsPanel.warningLabel.text")); // NOI18N

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(fontPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(warningLabel, GroupLayout.PREFERRED_SIZE, 315, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(warningLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fontPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(308, Short.MAX_VALUE))
        );

        fontPanel.getAccessibleContext().setAccessibleName(NbBundle.getMessage(ApplicationFontOptionsPanel.class, "ApplicationFontOptionsPanel.fontPanel.AccessibleContext.accessibleName")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

    private void resetBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        fontCombo.setSelectedItem("Arial");
        fontSizeSpinner.setValue(12);
    }//GEN-LAST:event_resetBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JComboBox<String> fontCombo;
    private JLabel fontLbl;
    private JPanel fontPanel;
    private JLabel fontSizeLbl;
    private JSpinner fontSizeSpinner;
    private JButton resetBtn;
    private JLabel warningLabel;
    // End of variables declaration//GEN-END:variables
}
