name: Build and Scan

on:
  push:
    branches:
    - master

  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
    branches:
    - master

jobs:
  unit_tests:
    name: Unit Tests

    runs-on: ubuntu-latest

    env:
      RUNNER_IMAGE: "constellationapplication/netbeans-runner:21.0.2"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      DESTINATION_BRANCH: "${{ github.base_ref }}"
      PULL_REQUEST_NUMBER: "${{ github.event.number }}"
      SOURCE_BRANCH: "${{ github.head_ref }}"
      SONARCLOUD_URL: sonarcloud.io

    steps:
    # Checkout this commit
    - name: Checkout Branch
      uses: actions/checkout@v4
      with:
        repository: constellation-app/constellation
        path: constellation
        fetch-depth: 0

    # Set the verbose flag as a variable
    - name: Set Verbosity
      id: verbosity
      run: |
        if [[ ${{ contains(github.event.pull_request.labels.*.name, 'verbose-logging') }} = 'true' ]]; then echo 'VERBOSITY=-v -verbose' >> $GITHUB_OUTPUT && echo 'Verbose Logging Enabled'; else echo 'Verbose Logging Disabled'; fi

      # Cache the ivy dependencies.
    - name: Restore Cache
      id: cache-dependencies
      uses: actions/cache@v4
      with:
        path: ~/.ivy2/cache
        key: ${{ runner.os }}-ivy-${{ hashFiles('constellation/CoreDependencies/src/ivy.xml') }}
        
    - name: Create Cache Folder
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        mkdir ~/.ivy2
        mkdir ~/.ivy2/cache

    - name: Add Execute Privilege to Scripts
      run: |
        chmod +x constellation/.githubutilities/run-tests.sh
        chmod +x constellation/.githubutilities/sonar.sh

    - name: Run Tests
      uses: addnab/docker-run-action@v3
      with:
        image: ${{ env.RUNNER_IMAGE }}
        options: |
          --mount type=bind,source=${{ github.workspace }},target=/code/constellation
          --mount type=bind,source=/home/runner/.ivy2,target=/root/.ivy2
          --workdir /code/constellation
        run: |
          .githubutilities/run-tests.sh ${{ steps.verbosity.outputs.VERBOSITY }}

    - name: Run Sonar
      uses: addnab/docker-run-action@v3
      with:
        image: ${{ env.RUNNER_IMAGE }}
        options: |
          --mount type=bind,source=${{ github.workspace }},target=/code/constellation
          --workdir /code/constellation
        run: |
          .githubutilities/sonar.sh
          "${GITHUB_REPOSITORY}"
          "${PULL_REQUEST_NUMBER}"
          "${DESTINATION_BRANCH}"
          "${SOURCE_BRANCH}"
          "${SONAR_TOKEN}"
