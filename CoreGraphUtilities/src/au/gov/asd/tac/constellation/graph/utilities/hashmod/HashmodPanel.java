/*
 * Copyright 2010-2020 Australian Signals Directorate
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package au.gov.asd.tac.constellation.graph.utilities.hashmod;

import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.openide.awt.Mnemonics;
import org.openide.util.NbBundle;
import org.openide.util.NbBundle.Messages;

/**
 * UI panel for the entry of the hashmod attributes
 *
 * @author CrucisGamma
 */
@Messages(
        {
            "MSG_fg=Select foreground color",
            "MSG_bg=Select background color"
        })
public class HashmodPanel extends javax.swing.JPanel {

    private static final String HASHMOD_CSV_FILE = "user.home";
    private String hashmodCSVFileStr = "";

    /**
     * Creates new form HashmodPanel.
     *
     * @param hashmod The Hashmod to be used in the panel.
     */
    public HashmodPanel(final Hashmod hashmod) {
        initComponents();
    }

    public Hashmod getHashmod() {
        final Hashmod hashmod;
        hashmod = new Hashmod(hashmodCSVFileStr);
        return hashmod;
    }

    public void setAttributeNames(final String key, final String attribute1, final String attribute2) {
        keyAttributeTextField.setText(key);
        value1AttributeTextField.setText(attribute1);
        value2AttributeTextField.setText(attribute2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userDirectoryLabel = new JLabel();
        hashmodCSVFile = new JTextField();
        userDirectoryButton = new JButton();
        userDirectoryLabel1 = new JLabel();
        userDirectoryLabel2 = new JLabel();
        userDirectoryLabel3 = new JLabel();
        keyAttributeTextField = new JTextField();
        value1AttributeTextField = new JTextField();
        value2AttributeTextField = new JTextField();

        Mnemonics.setLocalizedText(userDirectoryLabel, NbBundle.getMessage(HashmodPanel.class, "Hashmod.csv.label")); // NOI18N

        hashmodCSVFile.setText(NbBundle.getMessage(HashmodPanel.class, "Hashmod.csv.textfield")); // NOI18N
        hashmodCSVFile.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                hashmodCSVFileActionPerformed(evt);
            }
        });

        Mnemonics.setLocalizedText(userDirectoryButton, NbBundle.getMessage(HashmodPanel.class, "Hashmod.csv.button")); // NOI18N
        userDirectoryButton.setMargin(new Insets(2, 0, 2, 0));
        userDirectoryButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                userDirectoryButtonActionPerformed(evt);
            }
        });

        Mnemonics.setLocalizedText(userDirectoryLabel1, NbBundle.getMessage(HashmodPanel.class, "HashmodPanel.userDirectoryLabel1.text")); // NOI18N

        Mnemonics.setLocalizedText(userDirectoryLabel2, NbBundle.getMessage(HashmodPanel.class, "HashmodPanel.userDirectoryLabel2.text")); // NOI18N

        Mnemonics.setLocalizedText(userDirectoryLabel3, NbBundle.getMessage(HashmodPanel.class, "HashmodPanel.userDirectoryLabel3.text")); // NOI18N

        keyAttributeTextField.setText(NbBundle.getMessage(HashmodPanel.class, "HashmodPanel.keyAttributeTextField.text")); // NOI18N
        keyAttributeTextField.setEnabled(false);
        keyAttributeTextField.setName("keyAttributeTextField"); // NOI18N
        keyAttributeTextField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                keyAttributeTextFieldActionPerformed(evt);
            }
        });

        value1AttributeTextField.setText(NbBundle.getMessage(HashmodPanel.class, "HashmodPanel.value1AttributeTextField.text")); // NOI18N
        value1AttributeTextField.setEnabled(false);
        value1AttributeTextField.setName("value1AttributeTextField"); // NOI18N
        value1AttributeTextField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                value1AttributeTextFieldActionPerformed(evt);
            }
        });

        value2AttributeTextField.setText(NbBundle.getMessage(HashmodPanel.class, "HashmodPanel.value2AttributeTextField.text")); // NOI18N
        value2AttributeTextField.setEnabled(false);
        value2AttributeTextField.setName("value2AttributeTextField"); // NOI18N

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(userDirectoryLabel3)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(value2AttributeTextField))
                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(userDirectoryLabel)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hashmodCSVFile, GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(userDirectoryLabel2)
                            .addComponent(userDirectoryLabel1))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(keyAttributeTextField)
                            .addComponent(value1AttributeTextField))))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userDirectoryButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(userDirectoryLabel)
                    .addComponent(userDirectoryButton)
                    .addComponent(hashmodCSVFile, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(userDirectoryLabel1)
                    .addComponent(keyAttributeTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(userDirectoryLabel2)
                    .addComponent(value1AttributeTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(userDirectoryLabel3)
                    .addComponent(value2AttributeTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void userDirectoryButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_userDirectoryButtonActionPerformed
    {//GEN-HEADEREND:event_userDirectoryButtonActionPerformed
        final JFileChooser fc = new JFileChooser(System.getProperty(HASHMOD_CSV_FILE));
        final String hashmodCSV = hashmodCSVFile.getText().trim();
        if (!hashmodCSV.isEmpty()) {
            fc.setSelectedFile(new File(hashmodCSV));
        }
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setFileFilter(new FileNameExtensionFilter(("CSV files [.csv]"), "csv"));

        if (fc.showDialog(this, "Select a CSV for the Hashmod") == JFileChooser.APPROVE_OPTION) {
            final String fname = fc.getSelectedFile().getPath();
            hashmodCSVFile.setText(fname);
            hashmodCSVFileStr = fname;
            Hashmod thisHashmod = getHashmod();
            setAttributeNames(thisHashmod.getCSVKey(), thisHashmod.getCSVHeader(1), thisHashmod.getCSVHeader(2));

        }
    }//GEN-LAST:event_userDirectoryButtonActionPerformed

    private void hashmodCSVFileActionPerformed(ActionEvent evt) {//GEN-FIRST:event_hashmodCSVFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hashmodCSVFileActionPerformed

    private void keyAttributeTextFieldActionPerformed(ActionEvent evt) {//GEN-FIRST:event_keyAttributeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_keyAttributeTextFieldActionPerformed

    private void value1AttributeTextFieldActionPerformed(ActionEvent evt) {//GEN-FIRST:event_value1AttributeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_value1AttributeTextFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTextField hashmodCSVFile;
    private JTextField keyAttributeTextField;
    private JTextField value1AttributeTextField;
    private JTextField value2AttributeTextField;
    private JButton userDirectoryButton;
    private JLabel userDirectoryLabel;
    private JLabel userDirectoryLabel1;
    private JLabel userDirectoryLabel2;
    private JLabel userDirectoryLabel3;
    // End of variables declaration//GEN-END:variables
}
